name: GitHub Actions BackEnd CI/CD

on:
  push:
    branches:
      - development

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.9]
        node-version: ['18.17.1']
        appname: ['${{ vars.AppName}}']
        deploy-group: ['${{ vars.DeploymentGroup}}']
        s3-bucket: ['${{ vars.AWS_S3_BUCKET}}']
        s3-filename: ['dev-backend-build-${{ github.sha }}']

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      # Install AWS CLI 2
      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
        # sudo apt install awscli

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-east-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # Install project dependencies, test and build
      - name: Install dependencies
        run: yarn install 
      - name: Run build
        run: yarn run build

      # Deploy push to AWS S3
      - name: AWS Deploy Push
        run: |
          aws deploy push \
          --application-name ${{ matrix.appname }} \
          --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source .

      # Create Deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \
